<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.product.ProductDAOInter"> 
  <!--  <insert id="create" parameterType="dev.mvc.product.ProductDAOInter">
    INSERT INTO product(productno, bookno, memberno, title, content, cnt, 
                                  word, rdate, file1, file1saved, thumb1, size1, price)
    VALUES(product_seq.nextval, #{bookno}, #{memberno}, #{title}, #{content}, #{cnt}, 
                                        #{word}, sysdate, #{file1}, #{file1saved}, #{thumb1}, #{size1}, #{price})
  </insert> -->
  
  <!--  연속 입력 지원 등록 -->
  <insert id="create" parameterType="dev.mvc.product.ProductDAOInter">
    <selectKey keyProperty="productno" resultType="int" order="BEFORE">
      SELECT product_seq.nextval FROM dual
    </selectKey>
    
    INSERT INTO product(productno, bookno, memberno, title, content, cnt, 
                                 word, rdate, file1, file1saved, thumb1, size1, price)
    VALUES(#{productno}, #{bookno}, #{memberno}, #{title}, #{content}, #{cnt}, 
               #{word}, sysdate, #{file1}, #{file1saved}, #{thumb1}, #{size1}, #{price})
  </insert>
  
  <select id="list_by_bookno" resultType="dev.mvc.product.ProductVO" parameterType="int">
    SELECT productno, bookno, memberno, title, content, cnt, word, rdate, file1, file1saved, thumb1, size1, price
    FROM product 
    WHERE bookno=#{bookno}
    ORDER BY productno DESC
  </select>
  
  <!-- 도서별 검색 목록 -->
  <select id="list_by_bookno_search" resultType="dev.mvc.product.ProductVO" 
             parameterType="HashMap">
    SELECT productno, bookno, memberno, title, content, cnt, word, rdate, file1, file1saved, thumb1, size1, price
    FROM product 
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE bookno=#{bookno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE bookno=#{bookno} AND (
                                                        title LIKE CONCAT('%', #{word}, '%') 
                                                        OR content LIKE CONCAT('%', #{word}, '%')
                                                        OR word LIKE CONCAT('%', #{word}, '%')
                                                      )
      </otherwise>
    </choose>
    ORDER BY productno DESC   
  </select> 
  
  <!-- 도서별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM product
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE bookno=#{bookno}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE bookno=#{bookno} AND (title LIKE '%' || #{word} || '%' 
                                                       OR content LIKE '%' || #{word} || '%' 
                                                       OR word LIKE '%' || #{word} || '%')
      </otherwise>
    </choose>
  </select>
  
  
  <!-- 카테고리별 검색 목록 + 페이징 + 메인 이미지 -->   
  <select id="list_by_bookno_search_paging" 
             resultType="dev.mvc.product.ProductVO" parameterType="HashMap">
   SELECT productno, bookno, memberno, title, content, cnt, word, rdate, file1, file1saved, thumb1, size1, price, r
   FROM (
              SELECT productno, bookno, memberno, title, content, cnt, word, rdate, file1, file1saved, thumb1, size1, price, rownum as r
              FROM (
                        SELECT productno, bookno, memberno, title, content, cnt, word, rdate, file1, file1saved, thumb1, size1, price
                        FROM product
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                             WHERE bookno=#{bookno}
                          </when>
                          <otherwise>
                            WHERE bookno=#{bookno} AND (title LIKE '%' || #{word} || '%'  <!-- ||: 결합, %첫눈% -->
                                                                  OR content LIKE '%' || #{word} || '%' 
                                                                  OR word LIKE '%' || #{word} || '%')
                          </otherwise>
                        </choose>
                        ORDER BY productno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
<!--  1 page: WHERE r >= 1 AND r <= 10; 
       2 page: WHERE r >= 11 AND r <= 20;
       3 page: WHERE r >= 21 AND r <= 30; -->
     
  </select>
  
   <!-- 일반적인 조회 -->
  <select id="read" resultType="dev.mvc.product.ProductVO" parameterType="int">
    SELECT productno, bookno, memberno, title, content, cnt, word, rdate, file1, file1saved, thumb1, size1, price
    FROM product
    WHERE productno = #{productno}
  </select>
  
  <!-- 상품 정보 변경 -->
  <update id="product_update" parameterType="dev.mvc.product.ProductVO">
    UPDATE product
    SET price=#{price}
    WHERE productno = #{productno}
  </update> 

         
</mapper> 